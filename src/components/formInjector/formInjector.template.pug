doctype html
//- div(*ngFor='let row of layout; let rowIndex = index', fxLayout='row', [fxFlexOffset]='rowOffsets[rowIndex]')
//- 	div(*ngFor='let column of row', fxLayout='column', [fxFlex]='column.colSize', [fxFlexOffset]='column.colOffset')
//- 		div(*ngIf='column.innerRows', fxLayout='row', [fxFlexOffset]='rowOffsets[rowIndex]')
//- 			div(fxLayout='column', fxFill)
//- 				div(*ngFor='let innerRow of column.innerRows; let innerRowIndex = index', fxLayout='row')
//- 					div(
//- 						*ngFor='let innerColumn of innerRow',
//- 						fxLayout='column',
//- 						[fxFlex]='innerColumn.colSize',
//- 						[fxFlexOffset]='innerColumn.colOffset'
//- 					)
//- 						rui-input-injector(
//- 							[type]='fieldConfig[innerColumn.itemIndex].type',
//- 							[fieldData]='fieldData[innerColumn.fieldName]'
//- 						)
//- 		rui-input-injector(
//- 			*ngIf='!column.innerRows',
//- 			[type]='fieldConfig[column.itemIndex].type',
//- 			[fieldData]='fieldData[column.fieldName]'
//- 		)
div(*ngFor='let row of layout; let rowIndex = index', [ngStyle]='{"margin-top": rowOffsets[rowIndex]}')
	span(*ngFor='let column of row', [ngStyle]='{"width": column.colSize, "margin-top": column.colOffset}')
		div(*ngIf='column.innerRows', [ngStyle]='{"margin-top": rowOffsets[rowIndex]}')
			span(fxLayout='column', [ngStyle]='{"width": "100%"}')
				div(*ngFor='let innerRow of column.innerRows; let innerRowIndex = index')
					span(
						*ngFor='let innerColumn of innerRow',
						fxLayout='column',
						[ngStyle]='{"width": innerColumn.colSize, "margin-top": innerColumn.colOffset}'
					)
						rui-input-injector(
							[type]='fieldConfig[innerColumn.itemIndex].type',
							[fieldData]='fieldData[innerColumn.fieldName]'
						)
		rui-input-injector(
			*ngIf='!column.innerRows',
			[type]='fieldConfig[column.itemIndex].type',
			[fieldData]='fieldData[column.fieldName]'
		)
